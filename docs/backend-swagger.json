{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/ping": {
      "get": {
        "operationId": "AppController_getPing_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Ping",
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_register_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "409": {
            "description": "Username already exists"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "Login user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/tasks": {
      "post": {
        "operationId": "TasksController_create_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new task",
        "tags": [
          "Tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_findAll_v1",
        "parameters": [
          {
            "name": "title",
            "required": false,
            "in": "query",
            "description": "Filter by task title (partial match)",
            "schema": {
              "example": "documentation",
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "Filter by task description (partial match)",
            "schema": {
              "example": "API",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by task status",
            "schema": {
              "example": "in_progress",
              "type": "string",
              "enum": [
                "not_started",
                "in_progress",
                "done"
              ]
            }
          },
          {
            "name": "dueDate",
            "required": false,
            "in": "query",
            "description": "Filter by due date (ISO 8601 date string)",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "description": "Filter by creation date (ISO 8601 date string)",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "minimum": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by field (createdAt, dueDate, title, status)",
            "schema": {
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order (asc or desc)",
            "schema": {
              "example": "desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTaskResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all tasks with filtering and pagination",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v1/tasks/stats": {
      "get": {
        "operationId": "TasksController_getStats_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Task statistics retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get task statistics",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "operationId": "TasksController_findOne_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Task ID",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "403": {
            "description": "Forbidden - you can only access your own tasks"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a specific task by ID",
        "tags": [
          "Tasks"
        ]
      },
      "patch": {
        "operationId": "TasksController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Task ID",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "403": {
            "description": "Forbidden - you can only update your own tasks"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a task",
        "tags": [
          "Tasks"
        ]
      },
      "delete": {
        "operationId": "TasksController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Task ID",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task successfully deleted"
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          },
          "403": {
            "description": "Forbidden - you can only delete your own tasks"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a task",
        "tags": [
          "Tasks"
        ]
      }
    }
  },
  "info": {
    "title": "SEI Asia Backend Test API",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for the new user",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "description": "Password for the new user (minimum 6 characters)",
            "example": "password123",
            "minLength": 6
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "description": "User information"
          }
        },
        "required": [
          "access_token",
          "user"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Write comprehensive documentation for the API"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "enum": [
              "not_started",
              "in_progress",
              "done"
            ],
            "example": "not_started"
          },
          "dueDate": {
            "type": "string",
            "description": "Task due date (ISO 8601 date string)",
            "example": "2024-12-31"
          }
        },
        "required": [
          "title"
        ]
      },
      "TaskResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Task ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Write comprehensive documentation for the API",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "enum": [
              "not_started",
              "in_progress",
              "done"
            ],
            "example": "not_started"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "description": "Task due date",
            "example": "2024-12-31T00:00:00.000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "User ID who created the task",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Task creation timestamp",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Task last update timestamp",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "user": {
            "type": "object",
            "description": "User who created the task"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "status",
          "dueDate",
          "createdBy",
          "createdAt",
          "updatedAt",
          "user"
        ]
      },
      "PaginatedTaskResponseDto": {
        "type": "object",
        "properties": {
          "tasks": {
            "description": "Array of tasks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskResponseDto"
            }
          },
          "total": {
            "type": "number",
            "description": "Total number of tasks",
            "example": 100
          },
          "page": {
            "type": "number",
            "description": "Current page",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Number of items per page",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 10
          }
        },
        "required": [
          "tasks",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Complete project documentation"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Write comprehensive documentation for the API"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "enum": [
              "not_started",
              "in_progress",
              "done"
            ],
            "example": "in_progress"
          },
          "dueDate": {
            "type": "string",
            "description": "Task due date (ISO 8601 date string)",
            "example": "2024-12-31"
          }
        }
      }
    }
  }
}